/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { StyleProp, TextStyle } from 'react-native';
import { StyledComponentProps, StyleType } from '../../theme';
import { IconElement } from '../icon/icon.component';
import { PopoverElement, PopoverProps } from '../popover/popover.component';
import { ModalPresentingBased } from '../support/typings';
declare type IconProp = (style: StyleType) => IconElement;
declare type WrappingElement = React.ReactElement;
declare type PopoverContentProps = Omit<PopoverProps, 'content'>;
interface ComponentProps extends PopoverContentProps, ModalPresentingBased {
    text: string;
    textStyle?: StyleProp<TextStyle>;
    icon?: IconProp;
    children: WrappingElement;
}
export declare type TooltipProps = StyledComponentProps & ComponentProps;
export declare type TooltipElement = React.ReactElement<TooltipProps>;
/**
 * `Tooltip` displays informative text when users focus on or tap an element.
 *
 * @extends React.Component
 *
 * @property {string} text - Determines the text of the tooltip
 *
 * @property {StyleProp<TextStyle>} textStyle - Customizes text style.
 *
 * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.
 *
 * @property {ReactElement} children - Determines the element "above" which popover will be shown.
 *
 * @property {boolean} visible - Determines whether popover is visible or not.
 *
 * @property {string | PopoverPlacement} placement - Determines the placement of the popover.
 * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,
 * `right end`, `bottom start` or `bottom end`.
 * Default is `bottom`.
 *
 * @property {number} indicatorOffset - Determines the offset of indicator (arrow).
 * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).
 *
 * @property {Omit<PopoverProps, 'content'>} ...PopoverProps - Any props applied to Popover component,
 * excluding `content`.
 *
 * @property {ModalPresentingBased} ...ModalProps - Any props applied to Modal component.
 *
 * @overview-example TooltipSimpleUsage
 *
 * @overview-example TooltipWithIcon
 *
 * @overview-example TooltipPlacement
 *
 * @example TooltipWithExternalSourceIcon
 *
 * @example TooltipInlineStyling
 */
export declare class TooltipComponent extends React.Component<TooltipProps> {
    static styledComponentName: string;
    static defaultProps: Partial<TooltipProps>;
    private getComponentStyle;
    private renderTextElement;
    private renderIconElement;
    private renderContentElementChildren;
    private renderPopoverContentElement;
    render(): PopoverElement;
}
export declare const Tooltip: import("../../theme").StyledComponentClass<TooltipProps>;
export {};
