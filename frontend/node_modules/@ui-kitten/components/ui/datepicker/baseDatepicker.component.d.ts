import React from 'react';
import { ImageProps, ImageStyle, TouchableOpacityProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
import { PopoverElement } from '../popover/popover.component';
import { BaseCalendarProps } from '../calendar/baseCalendar.component';
import { CalendarElement } from '../calendar/calendar.component';
import { RangeCalendarElement } from '../calendar/rangeCalendar.component';
interface State {
    visible: boolean;
}
export interface ComponentProps {
    icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;
    status?: string;
    size?: string;
    placeholder?: string;
}
export declare type BaseDatepickerProps<D = Date> = StyledComponentProps & TouchableOpacityProps & BaseCalendarProps<D> & ComponentProps;
export declare abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {
    static defaultProps: Partial<BaseDatepickerProps>;
    state: State;
    protected abstract getComponentTitle(): string;
    protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;
    protected formatDateToString(date: D): string;
    private getComponentStyles;
    private onPressIn;
    private onPressOut;
    private toggleVisible;
    private dispatchActive;
    private renderIconElement;
    private renderTextElement;
    private renderControlChildren;
    private renderControl;
    render(): PopoverElement;
}
export {};
