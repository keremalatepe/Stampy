/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { ViewProps, ViewStyle, StyleProp } from 'react-native';
import { ModalPresentingBased } from '../support/typings';
export declare const baseModalTestId: string;
declare type ChildElement = React.ReactElement;
declare type ChildrenProp = ChildElement | ChildElement[];
interface ComponentProps {
    visible: boolean;
    children: ChildrenProp;
    backdropStyle?: StyleProp<ViewStyle>;
}
export declare type ModalProps = ViewProps & ComponentProps & ModalPresentingBased;
export declare type ModalElement = React.ReactElement<ModalProps>;
/**
 * `Modal` component is a wrapper than presents content above an enclosing view.
 *
 * @extends React.Component
 *
 * @property {boolean} visible - Determines whether component is visible. By default is false.
 *
 * @property {ReactElement | ReactElement[]} children - Determines component's children.
 *
 * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.
 * Default is `false`.
 *
 * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.
 *
 * @property {() => void} onBackdropPress - Determines component's behavior when the user is
 * tapping on back-drop.
 *
 * @property {ViewProps} ...ViewProps - Any props applied to View component.
 *
 * @overview-example ModalSimpleUsage
 *
 * @overview-example ModalWithBackdrop
 */
export declare class Modal extends React.Component<ModalProps> {
    static defaultProps: Partial<ModalProps>;
    private contentSize;
    private id;
    componentDidUpdate(prevProps: ModalProps): void;
    private handleVisibility;
    private getAbsoluteRelatedStyle;
    private onMeasure;
    private renderBaseModal;
    private renderModal;
    private renderMeasureNode;
    render(): React.ReactNode;
}
export {};
